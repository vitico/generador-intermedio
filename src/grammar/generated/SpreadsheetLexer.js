// Generated from ./src/grammar/Spreadsheet.g4 by ANTLR 4.9.3
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u0011\u0083\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0005\u0002/\n\u0002\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0005\u0007L\n\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003",
    "\n\u0003\n\u0003\u000b\u0003\u000b\u0007\u000bV\n\u000b\f\u000b\u000e",
    "\u000bY\u000b\u000b\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f",
    "\u0003\f\u0003\f\u0003\f\u0005\fd\n\f\u0003\r\u0003\r\u0007\rh\n\r\f",
    "\r\u000e\rk\u000b\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0007\u000e",
    "q\n\u000e\f\u000e\u000e\u000et\u000b\u000e\u0003\u000f\u0006\u000fw",
    "\n\u000f\r\u000f\u000e\u000fx\u0003\u000f\u0003\u000f\u0003\u0010\u0003",
    "\u0010\u0007\u0010\u007f\n\u0010\f\u0010\u000e\u0010\u0082\u000b\u0010",
    "\u0003i\u0002\u0011\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
    "\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b",
    "\u000f\u001d\u0010\u001f\u0011\u0003\u0002\t\u0006\u0002\'\',-//11\u0004",
    "\u0002>>@@\u0003\u00022;\u0004\u0002C\\c|\u0005\u00022;C\\c|\u0005\u0002",
    "\u000b\f\"\"tt\u0004\u0002\f\f\u000f\u000f\u0002\u008f\u0002\u0003\u0003",
    "\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003",
    "\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003",
    "\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003",
    "\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003",
    "\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003",
    "\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003",
    "\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003",
    "\u0002\u0002\u0002\u0003.\u0003\u0002\u0002\u0002\u00050\u0003\u0002",
    "\u0002\u0002\u00073\u0003\u0002\u0002\u0002\t9\u0003\u0002\u0002\u0002",
    "\u000b?\u0003\u0002\u0002\u0002\rK\u0003\u0002\u0002\u0002\u000fM\u0003",
    "\u0002\u0002\u0002\u0011O\u0003\u0002\u0002\u0002\u0013Q\u0003\u0002",
    "\u0002\u0002\u0015S\u0003\u0002\u0002\u0002\u0017c\u0003\u0002\u0002",
    "\u0002\u0019e\u0003\u0002\u0002\u0002\u001bn\u0003\u0002\u0002\u0002",
    "\u001dv\u0003\u0002\u0002\u0002\u001f|\u0003\u0002\u0002\u0002!\"\u0007",
    "k\u0002\u0002\"#\u0007p\u0002\u0002#/\u0007v\u0002\u0002$%\u0007d\u0002",
    "\u0002%&\u0007q\u0002\u0002&\'\u0007q\u0002\u0002\'/\u0007n\u0002\u0002",
    "()\u0007u\u0002\u0002)*\u0007v\u0002\u0002*+\u0007t\u0002\u0002+,\u0007",
    "k\u0002\u0002,-\u0007p\u0002\u0002-/\u0007i\u0002\u0002.!\u0003\u0002",
    "\u0002\u0002.$\u0003\u0002\u0002\u0002.(\u0003\u0002\u0002\u0002/\u0004",
    "\u0003\u0002\u0002\u000201\u0007k\u0002\u000212\u0007h\u0002\u00022",
    "\u0006\u0003\u0002\u0002\u000234\u0007g\u0002\u000245\u0007p\u0002\u0002",
    "56\u0007f\u0002\u000267\u0007k\u0002\u000278\u0007h\u0002\u00028\b\u0003",
    "\u0002\u0002\u00029:\u0007r\u0002\u0002:;\u0007t\u0002\u0002;<\u0007",
    "k\u0002\u0002<=\u0007p\u0002\u0002=>\u0007v\u0002\u0002>\n\u0003\u0002",
    "\u0002\u0002?@\u0007?\u0002\u0002@\f\u0003\u0002\u0002\u0002AL\t\u0002",
    "\u0002\u0002BC\u0007?\u0002\u0002CL\u0007?\u0002\u0002DE\u0007#\u0002",
    "\u0002EL\u0007?\u0002\u0002FL\t\u0003\u0002\u0002GH\u0007@\u0002\u0002",
    "HL\u0007?\u0002\u0002IJ\u0007>\u0002\u0002JL\u0007?\u0002\u0002KA\u0003",
    "\u0002\u0002\u0002KB\u0003\u0002\u0002\u0002KD\u0003\u0002\u0002\u0002",
    "KF\u0003\u0002\u0002\u0002KG\u0003\u0002\u0002\u0002KI\u0003\u0002\u0002",
    "\u0002L\u000e\u0003\u0002\u0002\u0002MN\u0007=\u0002\u0002N\u0010\u0003",
    "\u0002\u0002\u0002OP\u0007*\u0002\u0002P\u0012\u0003\u0002\u0002\u0002",
    "QR\u0007+\u0002\u0002R\u0014\u0003\u0002\u0002\u0002SW\t\u0004\u0002",
    "\u0002TV\t\u0004\u0002\u0002UT\u0003\u0002\u0002\u0002VY\u0003\u0002",
    "\u0002\u0002WU\u0003\u0002\u0002\u0002WX\u0003\u0002\u0002\u0002X\u0016",
    "\u0003\u0002\u0002\u0002YW\u0003\u0002\u0002\u0002Z[\u0007v\u0002\u0002",
    "[\\\u0007t\u0002\u0002\\]\u0007w\u0002\u0002]d\u0007g\u0002\u0002^_",
    "\u0007h\u0002\u0002_`\u0007c\u0002\u0002`a\u0007n\u0002\u0002ab\u0007",
    "u\u0002\u0002bd\u0007g\u0002\u0002cZ\u0003\u0002\u0002\u0002c^\u0003",
    "\u0002\u0002\u0002d\u0018\u0003\u0002\u0002\u0002ei\u0007$\u0002\u0002",
    "fh\u000b\u0002\u0002\u0002gf\u0003\u0002\u0002\u0002hk\u0003\u0002\u0002",
    "\u0002ij\u0003\u0002\u0002\u0002ig\u0003\u0002\u0002\u0002jl\u0003\u0002",
    "\u0002\u0002ki\u0003\u0002\u0002\u0002lm\u0007$\u0002\u0002m\u001a\u0003",
    "\u0002\u0002\u0002nr\t\u0005\u0002\u0002oq\t\u0006\u0002\u0002po\u0003",
    "\u0002\u0002\u0002qt\u0003\u0002\u0002\u0002rp\u0003\u0002\u0002\u0002",
    "rs\u0003\u0002\u0002\u0002s\u001c\u0003\u0002\u0002\u0002tr\u0003\u0002",
    "\u0002\u0002uw\t\u0007\u0002\u0002vu\u0003\u0002\u0002\u0002wx\u0003",
    "\u0002\u0002\u0002xv\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002",
    "yz\u0003\u0002\u0002\u0002z{\b\u000f\u0002\u0002{\u001e\u0003\u0002",
    "\u0002\u0002|\u0080\u0007%\u0002\u0002}\u007f\n\b\u0002\u0002~}\u0003",
    "\u0002\u0002\u0002\u007f\u0082\u0003\u0002\u0002\u0002\u0080~\u0003",
    "\u0002\u0002\u0002\u0080\u0081\u0003\u0002\u0002\u0002\u0081 \u0003",
    "\u0002\u0002\u0002\u0082\u0080\u0003\u0002\u0002\u0002\u000b\u0002.",
    "KWcirx\u0080\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SpreadsheetLexer extends antlr4.Lexer {

    static grammarFileName = "Spreadsheet.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, "'if'", "'endif'", "'print'", "'='", 
                         null, "';'", "'('", "')'" ];
	static symbolicNames = [ null, "TYPE", "IF", "ENDIF", "PRINT", "ASSIGN", 
                          "OP", "SEMICOLON", "LPAREN", "RPAREN", "INTEGER", 
                          "BOOLEAN", "STRING", "NAME", "Space", "LINECOMMENT" ];
	static ruleNames = [ "TYPE", "IF", "ENDIF", "PRINT", "ASSIGN", "OP", "SEMICOLON", 
                      "LPAREN", "RPAREN", "INTEGER", "BOOLEAN", "STRING", 
                      "NAME", "Space", "LINECOMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

SpreadsheetLexer.EOF = antlr4.Token.EOF;
SpreadsheetLexer.TYPE = 1;
SpreadsheetLexer.IF = 2;
SpreadsheetLexer.ENDIF = 3;
SpreadsheetLexer.PRINT = 4;
SpreadsheetLexer.ASSIGN = 5;
SpreadsheetLexer.OP = 6;
SpreadsheetLexer.SEMICOLON = 7;
SpreadsheetLexer.LPAREN = 8;
SpreadsheetLexer.RPAREN = 9;
SpreadsheetLexer.INTEGER = 10;
SpreadsheetLexer.BOOLEAN = 11;
SpreadsheetLexer.STRING = 12;
SpreadsheetLexer.NAME = 13;
SpreadsheetLexer.Space = 14;
SpreadsheetLexer.LINECOMMENT = 15;



